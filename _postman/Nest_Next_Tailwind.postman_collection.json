{
	"info": {
		"_postman_id": "31257354-3f8f-4633-85cf-d66f06188075",
		"name": "Nest_Next_Tailwind",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22810484"
	},
	"item": [
		{
			"name": "Get Cities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - city and state\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.be.an('object');\r",
							"        pm.expect(item).to.have.property('city');\r",
							"        pm.expect(item).to.have.property('state');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"City and state are non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(item) {\r",
							"    pm.expect(item.city).to.be.a('string').and.to.have.lengthOf.at.least(1, \"City should not be empty\");\r",
							"    pm.expect(item.state).to.be.a('string').and.to.have.lengthOf.at.least(1, \"State should not be empty\");\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8500/cities",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8500",
					"path": [
						"cities"
					]
				}
			},
			"response": [
				{
					"name": "Get Cities",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8500/cities",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8500",
							"path": [
								"cities"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "110"
						},
						{
							"key": "ETag",
							"value": "W/\"6e-Jtv/tpIHLJM8EoWX91rpTLkThPo\""
						},
						{
							"key": "Date",
							"value": "Sun, 11 May 2025 18:07:37 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"city\": \"Champaign\",\n        \"state\": \"Illinois\"\n    },\n    {\n        \"city\": \"Columbus\",\n        \"state\": \"Ohio\"\n    },\n    {\n        \"city\": \"Austin\",\n        \"state\": \"Texas\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - city and state\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('city');\r",
							"    pm.expect(responseData).to.have.property('state');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"City and state are non-empty strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.city).to.be.a('string').and.to.have.lengthOf.at.least(1, \"City should not be empty\");\r",
							"  pm.expect(responseData.state).to.be.a('string').and.to.have.lengthOf.at.least(1, \"State should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:8500/city?city=Austin&state=Texas",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8500",
					"path": [
						"city"
					],
					"query": [
						{
							"key": "city",
							"value": "Austin"
						},
						{
							"key": "state",
							"value": "Texas"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get City",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8500/city?city=Austin&state=Texas",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8500",
							"path": [
								"city"
							],
							"query": [
								{
									"key": "city",
									"value": "Austin"
								},
								{
									"key": "state",
									"value": "Texas"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "33"
						},
						{
							"key": "ETag",
							"value": "W/\"21-pgzUyeX7gj3ABgvYztiDPAMWC3Q\""
						},
						{
							"key": "Date",
							"value": "Sun, 11 May 2025 18:16:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"city\": \"Austin\",\n    \"state\": \"Texas\"\n}"
				}
			]
		},
		{
			"name": "Add City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the response schema for the required fields - city and state\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"  \r",
							"  responseData.forEach(function(item) {\r",
							"    pm.expect(item).to.have.property('city').that.is.a('string');\r",
							"    pm.expect(item).to.have.property('state').that.is.a('string');\r",
							"  });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost:8500/city?city=Los Angeles&state=California",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8500",
					"path": [
						"city"
					],
					"query": [
						{
							"key": "city",
							"value": "Los Angeles"
						},
						{
							"key": "state",
							"value": "California"
						}
					]
				}
			},
			"response": [
				{
					"name": "Add City",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:8500/city?city=Los Angeles&state=California",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8500",
							"path": [
								"city"
							],
							"query": [
								{
									"key": "city",
									"value": "Los Angeles"
								},
								{
									"key": "state",
									"value": "California"
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "154"
						},
						{
							"key": "ETag",
							"value": "W/\"9a-wX2txF+IJH2v8+2XJ7oLgnEDl74\""
						},
						{
							"key": "Date",
							"value": "Sun, 11 May 2025 18:15:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"city\": \"Champaign\",\n        \"state\": \"Illinois\"\n    },\n    {\n        \"city\": \"Columbus\",\n        \"state\": \"Ohio\"\n    },\n    {\n        \"city\": \"Austin\",\n        \"state\": \"Texas\"\n    },\n    {\n        \"city\": \"Los Angeles\",\n        \"state\": \"California\"\n    }\n]"
				}
			]
		},
		{
			"name": "Delete City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the response schema for the required fields - city and state\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property('city').that.is.a('string');\r",
							"        pm.expect(item).to.have.property('state').that.is.a('string');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"City and state fields are not empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item){\r",
							"        pm.expect(item.city).to.exist.and.to.have.lengthOf.at.least(1, \"City value should not be empty\");\r",
							"        pm.expect(item.state).to.exist.and.to.have.lengthOf.at.least(1, \"State value should not be empty\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:8500/city?city=Los Angeles&state=California",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "8500",
					"path": [
						"city"
					],
					"query": [
						{
							"key": "city",
							"value": "Los Angeles"
						},
						{
							"key": "state",
							"value": "California"
						}
					]
				}
			},
			"response": [
				{
					"name": "Delete City",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:8500/city?city=Los Angeles&state=California",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8500",
							"path": [
								"city"
							],
							"query": [
								{
									"key": "city",
									"value": "Los Angeles"
								},
								{
									"key": "state",
									"value": "California"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "110"
						},
						{
							"key": "ETag",
							"value": "W/\"6e-Jtv/tpIHLJM8EoWX91rpTLkThPo\""
						},
						{
							"key": "Date",
							"value": "Sun, 11 May 2025 18:19:13 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"city\": \"Champaign\",\n        \"state\": \"Illinois\"\n    },\n    {\n        \"city\": \"Columbus\",\n        \"state\": \"Ohio\"\n    },\n    {\n        \"city\": \"Austin\",\n        \"state\": \"Texas\"\n    }\n]"
				}
			]
		}
	]
}